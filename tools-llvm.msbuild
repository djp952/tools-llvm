<!--
tools-llvm.msbuild

Usage:

  - Open Developer Command Prompt for VS2015
  - Navigate to tools-llvm solution directory
  - msbuild tools-llvm.msbuild /t:[TARGET]

Targets:

  - Clean               - Cleans release versions
  - Build               - Rebuilds release versions
  - UnitTest            - Executes release version unit test(s)
  - CodeCoverageReport  - Generates a code coverage report (Debug|Win32) into out\codecoverage
  - Package             - Generates nuget package(s) into out\nuget

-->
<Project DefaultTargets="Package" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  
  <PropertyGroup>
    <SolutionDir>.\</SolutionDir>
    <VSTestConsoleExe>&quot;%VS140COMNTOOLS%..\IDE\CommonExtensions\Microsoft\TestWindow\vstest.console.exe&quot;</VSTestConsoleExe>
    <OpenCoverConsoleExe>&quot;$(SolutionDir)..\external-opencover\tools\OpenCover.Console.exe&quot;</OpenCoverConsoleExe>
    <ReportGeneratorExe>&quot;$(SolutionDir)..\external-reportgenerator\tools\ReportGenerator.exe&quot;</ReportGeneratorExe>
    <NuGetExe>&quot;$(SolutionDir)..\external-nuget\nuget.exe&quot;</NuGetExe>
  </PropertyGroup>
  
  <!-- Clean release targets and output directory -->
  <Target Name="Clean">
    <MSBuild Projects="tools-llvm.sln" Properties="Configuration=Release;Platform=Win32" Targets="Clean" ContinueOnError="false"/>
    <MSBuild Projects="tools-llvm.sln" Properties="Configuration=Release;Platform=x64" Targets="Clean" ContinueOnError="false"/>
    <RemoveDir Directories="$(SolutionDir)clang\tmp"/>
    <RemoveDir Directories="$(SolutionDir)clang.test\tmp"/>
    <RemoveDir Directories="$(SolutionDir)out"/>
  </Target>

  <!-- Build release targets -->
  <Target Name="Build" DependsOnTargets="Clean">
    <MSBuild Projects="tools-llvm.sln" Properties="Configuration=Release;Platform=Win32" Targets="Rebuild" ContinueOnError="false"/>
    <MSBuild Projects="tools-llvm.sln" Properties="Configuration=Release;Platform=x64" Targets="Rebuild" ContinueOnError="false"/>
  </Target>

  <!-- Build release targets and execute unit tests -->
  <Target Name="UnitTest" DependsOnTargets="Build">
    <Exec Command="$(VSTestConsoleExe) /Settings:$(SolutionDir)default.runsettings /Platform:x86 /inIsolation $(SolutionDir)out\Win32\Release\zuki.tools.llvm.clang.test.dll" ContinueOnError="false"/>
    <Exec Command="$(VSTestConsoleExe) /Settings:$(SolutionDir)default.runsettings /Platform:x64 /inIsolation $(SolutionDir)out\x64\Release\zuki.tools.llvm.clang.test.dll" ContinueOnError="false"/>
  </Target>

  <!-- Generate code coverage report (Debug / Win32 only) -->
  <Target Name="CodeCoverageReport">

    <PropertyGroup>
      <CodeCoverageDir>$(SolutionDir)out\codecoverage\</CodeCoverageDir>
    </PropertyGroup>

    <MakeDir Directories="$(CodeCoverageDir)" ContinueOnError="false"/>
    
    <MSBuild Projects="tools-llvm.sln" Properties="Configuration=Debug;Platform=Win32" Targets="Rebuild" ContinueOnError="false"/>
    
    <Exec Command="$(OpenCoverConsoleExe) -register:user -target:$(VsTestConsoleExe) -targetargs:&quot;/Settings:$(SolutionDir)default.runsettings /Logger:trx /inIsolation $(SolutionDir)out\Win32\Debug\zuki.tools.llvm.clang.test.dll&quot; -filter:&quot;+[zuki.tools.llvm.clang]*&quot; -mergebyhash -output:&quot;$(CodeCoverageDir)\codecoverage.xml&quot;" ContinueOnError="true"/>
    <Exec Command="$(ReportGeneratorExe) -reports:&quot;$(CodeCoverageDir)\codecoverage.xml&quot; -targetdir:&quot;$(CodeCoverageDir)&quot;" ContinueOnError="false"/>
    
  </Target>

  <!-- Generate nuget package -->
  <Target Name="Package" DependsOnTargets="Build">

    <PropertyGroup>
      <PackageVersion>$([System.IO.File]::ReadAllText($(SolutionDir)clang\tmp\version.txt))</PackageVersion>
      <PackageDir>$(SolutionDir)out\nuget\</PackageDir>
      <PackageLibDir>$(PackageDir)lib\net45\</PackageLibDir>
      <PackageBuildDir>$(PackageDir)build\net45\</PackageBuildDir>
    </PropertyGroup>

    <RemoveDir Directories="$(PackageDir)" ContinueOnError="false"/>
    
    <MakeDir Directories="$(PackageDir)" ContinueOnError="false"/>
    <MakeDir Directories="$(PackageLibDir)" ContinueOnError="false"/>
    <MakeDir Directories="$(PackageBuildDir)" ContinueOnError="false"/>

    <Copy SourceFiles="$(SolutionDir)clang\clang.nuspec" DestinationFiles="$(PackageDir)zuki.tools.llvm.clang.nuspec" ContinueOnError="false"/>
    <Copy SourceFiles="$(SolutionDir)out\Win32\Release\zuki.tools.llvm.clang.dll" DestinationFolder="$(PackageLibDir)" ContinueOnError="false"/>
    <Copy SourceFiles="$(SolutionDir)out\Win32\Release\zuki.tools.llvm.clang.dll" DestinationFolder="$(PackageBuildDir)x86\" ContinueOnError="false"/>
    <Copy SourceFiles="$(SolutionDir)out\x64\Release\zuki.tools.llvm.clang.dll" DestinationFolder="$(PackageBuildDir)x64\" ContinueOnError="false"/>
    <Copy SourceFiles="$(SolutionDir)..\external-libclang\bin\Win32\libclang.dll" DestinationFolder="$(PackageBuildDir)x86\" ContinueOnError="false"/>
    <Copy SourceFiles="$(SolutionDir)..\external-libclang\bin\x64\libclang.dll" DestinationFolder="$(PackageBuildDir)x64\" ContinueOnError="false"/>
    <Copy SourceFiles="$(SolutionDir)clang\clang.targets" DestinationFiles="$(PackageBuildDir)zuki.tools.llvm.clang.targets" ContinueOnError="false"/>

    <Exec Command="$(NuGetExe) pack $(PackageDir)zuki.tools.llvm.clang.nuspec -OutputDirectory $(PackageDir) -Version $(PackageVersion)" ContinueOnError="false" />

  </Target>
  
</Project>